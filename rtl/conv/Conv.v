// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu7ev-ffvc1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.806000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=9,HLS_SYN_FF=1990,HLS_SYN_LUT=2202,HLS_VERSION=2018_3}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [15:0] CHout_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [7:0] Sx_V;
wire   [7:0] Sy_V;
wire   [0:0] mode_V;
wire   [0:0] relu_en_V;
wire   [6:0] feature_in_address0;
reg    feature_in_ce0;
wire   [15:0] feature_in_q0;
wire   [3:0] W_address0;
reg    W_ce0;
wire   [15:0] W_q0;
reg    bias_ce0;
wire   [15:0] bias_q0;
wire   [6:0] feature_out_address0;
reg    feature_out_ce0;
reg    feature_out_we0;
wire   [15:0] feature_out_d0;
reg   [0:0] relu_en_V_read_reg_967;
reg   [7:0] Sy_V_read_reg_972;
reg   [7:0] Sx_V_read_reg_977;
reg   [7:0] Ky_V_read_reg_982;
reg   [7:0] Kx_V_read_reg_987;
reg   [15:0] CHout_V_read_reg_992;
reg   [15:0] Win_V_read_reg_997;
reg   [15:0] CHin_V_read_reg_1002;
wire   [7:0] p_s_fu_492_p3;
reg   [7:0] p_s_reg_1008;
wire   [7:0] p_1_fu_500_p3;
reg   [7:0] p_1_reg_1013;
wire   [16:0] lhs_V_2_cast_fu_520_p1;
reg   [16:0] lhs_V_2_cast_reg_1018;
wire   [16:0] lhs_V_4_cast_fu_570_p1;
reg   [16:0] lhs_V_4_cast_reg_1033;
wire  signed [4:0] tmp_21_fu_608_p1;
reg  signed [4:0] tmp_21_reg_1048;
wire  signed [4:0] tmp_23_fu_612_p1;
reg  signed [4:0] tmp_23_reg_1053;
wire  signed [4:0] tmp_25_fu_616_p1;
reg  signed [4:0] tmp_25_reg_1058;
wire  signed [7:0] tmp_30_fu_620_p1;
reg  signed [7:0] tmp_30_reg_1064;
wire   [15:0] Wout_V_fu_632_p2;
reg   [15:0] Wout_V_reg_1070;
wire    ap_CS_fsm_state23;
wire   [15:0] tmp_7_fu_642_p2;
reg   [15:0] tmp_7_reg_1075;
wire   [15:0] tmp_9_fu_648_p1;
reg   [15:0] tmp_9_reg_1080;
wire   [15:0] tmp_s_fu_651_p1;
reg   [15:0] tmp_s_reg_1085;
wire  signed [7:0] rhs_V_1_cast_fu_654_p2;
reg  signed [7:0] rhs_V_1_cast_reg_1090;
wire   [31:0] rhs_V_fu_660_p1;
reg   [31:0] rhs_V_reg_1095;
wire   [15:0] tmp_19_fu_663_p1;
reg   [15:0] tmp_19_reg_1101;
wire   [15:0] tmp_20_fu_666_p1;
reg   [15:0] tmp_20_reg_1106;
wire   [47:0] rhs_V_1_fu_669_p1;
reg   [47:0] rhs_V_1_reg_1111;
wire   [15:0] cout_fu_677_p2;
reg   [15:0] cout_reg_1119;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_31_fu_688_p1;
reg   [7:0] tmp_31_reg_1124;
wire   [0:0] exitcond5_fu_672_p2;
wire   [4:0] tmp_32_fu_692_p1;
reg   [4:0] tmp_32_reg_1129;
reg   [6:0] bias_addr_reg_1134;
wire   [15:0] next_mul4_fu_696_p2;
reg   [15:0] next_mul4_reg_1139;
wire    ap_CS_fsm_state25;
wire   [15:0] i_fu_710_p2;
reg   [15:0] i_reg_1147;
wire   [15:0] tmp_22_fu_721_p2;
reg   [15:0] tmp_22_reg_1152;
wire   [0:0] exitcond1_fu_705_p2;
wire   [7:0] ret_V_1_fu_726_p2;
reg   [7:0] ret_V_1_reg_1157;
wire   [15:0] next_mul_fu_731_p2;
reg   [15:0] next_mul_reg_1162;
wire    ap_CS_fsm_state26;
wire   [15:0] j_fu_741_p2;
reg   [15:0] j_reg_1170;
wire   [15:0] tmp_24_fu_747_p2;
reg   [15:0] tmp_24_reg_1175;
wire   [0:0] exitcond_fu_736_p2;
wire   [7:0] ii_fu_757_p2;
reg   [7:0] ii_reg_1183;
wire    ap_CS_fsm_state27;
wire  signed [15:0] h_V_fu_771_p2;
reg  signed [15:0] h_V_reg_1188;
wire   [0:0] exitcond4_fu_752_p2;
wire   [47:0] ret_V_13_fu_787_p2;
reg   [47:0] ret_V_13_reg_1193;
wire   [4:0] ret_V_5_fu_792_p2;
reg   [4:0] ret_V_5_reg_1198;
wire   [0:0] rev_fu_802_p2;
reg   [0:0] rev_reg_1203;
(* use_dsp48 = "no" *) wire   [7:0] sum6_fu_812_p2;
reg   [7:0] sum6_reg_1208;
wire   [7:0] jj_fu_821_p2;
reg   [7:0] jj_reg_1216;
wire    ap_CS_fsm_state28;
wire  signed [47:0] grp_fu_954_p3;
reg  signed [47:0] ret_V_11_reg_1227;
wire   [0:0] exitcond3_fu_816_p2;
wire   [0:0] brmerge_fu_849_p2;
wire   [0:0] tmp_28_fu_862_p2;
wire   [4:0] tmp1_fu_881_p2;
reg   [4:0] tmp1_reg_1232;
wire   [15:0] cin_fu_891_p2;
reg   [15:0] cin_reg_1240;
wire    ap_CS_fsm_state29;
wire   [0:0] exitcond2_fu_886_p2;
wire    ap_CS_fsm_state30;
wire   [15:0] grp_fu_364_p2;
reg   [15:0] tp_reg_1265;
wire    ap_CS_fsm_state32;
wire   [15:0] grp_fu_357_p2;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
reg   [15:0] sum_3_reg_1280;
wire    ap_CS_fsm_state39;
reg   [15:0] i_op_assign_s_reg_217;
reg   [15:0] i_op_assign_1_reg_228;
reg   [15:0] phi_mul3_reg_239;
reg   [15:0] i_op_assign_2_reg_250;
wire    ap_CS_fsm_state41;
reg   [15:0] phi_mul_reg_262;
reg   [15:0] sum_reg_273;
reg   [7:0] i_op_assign_3_reg_285;
reg   [15:0] sum_1_reg_296;
wire    ap_CS_fsm_state36;
reg   [7:0] i_op_assign_4_reg_308;
reg   [15:0] sum_2_reg_319;
reg   [15:0] i_op_assign_reg_330;
reg   [15:0] sum_1_be_reg_341;
wire   [63:0] tmp_10_fu_683_p1;
wire  signed [63:0] tmp_29_fu_906_p1;
wire   [63:0] sum4_cast_fu_919_p1;
wire   [63:0] sum6_cast_fu_937_p1;
reg   [15:0] grp_fu_357_p0;
reg   [15:0] grp_fu_357_p1;
wire    ap_CS_fsm_state33;
wire   [8:0] tmp_2_cast_fu_376_p1;
wire   [8:0] ret_V_tr_fu_380_p2;
wire   [8:0] p_neg9_fu_394_p2;
wire   [7:0] tmp_3_fu_400_p4;
wire   [0:0] tmp_1_fu_386_p3;
wire   [7:0] tmp_6_fu_420_p2;
wire   [7:0] tmp_2_fu_410_p4;
wire   [8:0] tmp_16_cast_fu_434_p1;
wire   [8:0] ret_V_1_tr_fu_438_p2;
wire   [8:0] p_neg_fu_452_p2;
wire   [7:0] tmp_5_fu_458_p4;
wire   [0:0] tmp_4_fu_444_p3;
wire   [7:0] tmp_11_fu_478_p2;
wire   [7:0] tmp_8_fu_468_p4;
wire   [7:0] pad_x_V_fu_426_p3;
wire   [7:0] pad_y_V_fu_484_p3;
wire   [8:0] ret_V_2_fu_508_p3;
wire   [16:0] ret_V_2_cast_fu_516_p1;
wire   [16:0] ret_V_3_fu_524_p2;
wire   [17:0] ret_V_3_cast_fu_530_p1;
wire   [17:0] rhs_V_2_cast_fu_534_p1;
wire   [17:0] ret_V_4_fu_538_p2;
wire  signed [18:0] grp_fu_552_p0;
wire   [8:0] grp_fu_552_p1;
wire   [8:0] ret_V_6_fu_558_p3;
wire   [16:0] ret_V_6_cast_fu_566_p1;
wire   [16:0] ret_V_7_fu_574_p2;
wire   [17:0] ret_V_7_cast_fu_580_p1;
wire   [17:0] rhs_V_5_cast_fu_584_p1;
wire   [17:0] ret_V_8_fu_588_p2;
wire  signed [18:0] grp_fu_602_p0;
wire   [8:0] grp_fu_602_p1;
wire   [15:0] grp_fu_552_p2;
wire   [15:0] tmp_13_fu_624_p1;
wire   [15:0] grp_fu_602_p2;
wire   [15:0] tmp_17_fu_638_p1;
wire   [7:0] tmp_15_fu_628_p1;
wire  signed [7:0] tmp_33_fu_701_p1;
wire  signed [7:0] ret_V_fu_716_p2;
wire   [15:0] tmp_18_fu_763_p1;
wire  signed [31:0] ret_V_9_fu_941_p2;
wire  signed [31:0] ret_V_13_fu_787_p0;
wire   [15:0] ret_V_13_fu_787_p1;
wire  signed [4:0] tmp_35_fu_767_p1;
wire  signed [16:0] lhs_V_7_cast_fu_780_p1;
wire   [0:0] slt_fu_797_p2;
wire  signed [7:0] grp_fu_947_p3;
wire   [15:0] tmp_26_fu_827_p1;
wire  signed [15:0] w_V_fu_831_p2;
wire   [15:0] tmp_27_fu_836_p2;
wire   [0:0] tmp_36_fu_841_p3;
wire  signed [16:0] lhs_V_5_cast_fu_858_p1;
wire   [4:0] tmp_37_fu_867_p1;
wire  signed [4:0] ret_V_12_fu_871_p2;
wire  signed [4:0] tmp_fu_876_p2;
wire   [47:0] rhs_V_10_cast_fu_897_p1;
(* use_dsp48 = "no" *) wire   [47:0] ret_V_14_fu_901_p2;
wire  signed [4:0] grp_fu_960_p3;
(* use_dsp48 = "no" *) wire   [4:0] sum4_fu_915_p2;
wire   [0:0] grp_fu_370_p2;
wire   [0:0] or_cond_fu_924_p2;
wire   [15:0] ret_V_9_fu_941_p1;
wire  signed [7:0] grp_fu_947_p0;
wire   [15:0] grp_fu_954_p1;
wire  signed [4:0] grp_fu_960_p0;
reg    grp_fu_552_ap_start;
wire    grp_fu_552_ap_done;
reg    grp_fu_602_ap_start;
wire    grp_fu_602_ap_done;
reg   [40:0] ap_NS_fsm;
wire   [18:0] grp_fu_552_p10;
wire   [18:0] grp_fu_602_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
end

Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .CHout_V(CHout_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .Sx_V(Sx_V),
    .Sy_V(Sy_V),
    .mode_V(mode_V),
    .relu_en_V(relu_en_V),
    .feature_in_address0(feature_in_address0),
    .feature_in_ce0(feature_in_ce0),
    .feature_in_q0(feature_in_q0),
    .W_address0(W_address0),
    .W_ce0(W_ce0),
    .W_q0(W_q0),
    .bias_address0(bias_addr_reg_1134),
    .bias_ce0(bias_ce0),
    .bias_q0(bias_q0),
    .feature_out_address0(feature_out_address0),
    .feature_out_ce0(feature_out_ce0),
    .feature_out_we0(feature_out_we0),
    .feature_out_d0(feature_out_d0)
);

Conv_hadd_16ns_16bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
Conv_hadd_16ns_16bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_357_p0),
    .din1(grp_fu_357_p1),
    .ce(1'b1),
    .dout(grp_fu_357_p2)
);

Conv_hmul_16ns_16cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
Conv_hmul_16ns_16cud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(feature_in_q0),
    .din1(W_q0),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

Conv_hcmp_16ns_16dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
Conv_hcmp_16ns_16dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_357_p2),
    .din1(16'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_370_p2)
);

Conv_sdiv_19s_9nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nseOg_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_552_ap_start),
    .done(grp_fu_552_ap_done),
    .din0(grp_fu_552_p0),
    .din1(grp_fu_552_p1),
    .ce(1'b1),
    .dout(grp_fu_552_p2)
);

Conv_sdiv_19s_9nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nseOg_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_602_ap_start),
    .done(grp_fu_602_ap_done),
    .din0(grp_fu_602_p0),
    .din1(grp_fu_602_p1),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

Conv_mul_mul_16s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16s_fYi_U6(
    .din0(h_V_fu_771_p2),
    .din1(ret_V_9_fu_941_p1),
    .dout(ret_V_9_fu_941_p2)
);

Conv_mac_muladd_8g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8g8j_U7(
    .din0(grp_fu_947_p0),
    .din1(tmp_30_reg_1064),
    .din2(tmp_31_reg_1124),
    .dout(grp_fu_947_p3)
);

Conv_mac_muladd_1hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Conv_mac_muladd_1hbi_U8(
    .din0(w_V_fu_831_p2),
    .din1(grp_fu_954_p1),
    .din2(ret_V_13_reg_1193),
    .dout(grp_fu_954_p3)
);

Conv_mac_muladd_5ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
Conv_mac_muladd_5ibs_U9(
    .din0(grp_fu_960_p0),
    .din1(tmp_25_reg_1058),
    .din2(tmp_32_reg_1129),
    .dout(grp_fu_960_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        i_op_assign_1_reg_228 <= i_reg_1147;
    end else if (((exitcond5_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        i_op_assign_1_reg_228 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        i_op_assign_2_reg_250 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_op_assign_2_reg_250 <= j_reg_1170;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        i_op_assign_3_reg_285 <= ii_reg_1183;
    end else if (((exitcond_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        i_op_assign_3_reg_285 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_op_assign_4_reg_308 <= jj_reg_1216;
    end else if (((exitcond4_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        i_op_assign_4_reg_308 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_28_fu_862_p2 == 1'd1) & (brmerge_fu_849_p2 == 1'd0) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        i_op_assign_reg_330 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i_op_assign_reg_330 <= cin_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        i_op_assign_s_reg_217 <= cout_reg_1119;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_op_assign_s_reg_217 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        phi_mul3_reg_239 <= next_mul4_reg_1139;
    end else if (((exitcond5_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        phi_mul3_reg_239 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        phi_mul_reg_262 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        phi_mul_reg_262 <= next_mul_reg_1162;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        sum_1_be_reg_341 <= sum_2_reg_319;
    end else if ((((brmerge_fu_849_p2 == 1'd1) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((tmp_28_fu_862_p2 == 1'd0) & (brmerge_fu_849_p2 == 1'd0) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        sum_1_be_reg_341 <= sum_1_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        sum_1_reg_296 <= sum_1_be_reg_341;
    end else if (((exitcond4_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        sum_1_reg_296 <= sum_reg_273;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_28_fu_862_p2 == 1'd1) & (brmerge_fu_849_p2 == 1'd0) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        sum_2_reg_319 <= sum_1_reg_296;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sum_2_reg_319 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        sum_reg_273 <= sum_1_reg_296;
    end else if (((exitcond_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        sum_reg_273 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        CHin_V_read_reg_1002 <= CHin_V;
        CHout_V_read_reg_992 <= CHout_V;
        Kx_V_read_reg_987 <= Kx_V;
        Ky_V_read_reg_982 <= Ky_V;
        Sx_V_read_reg_977 <= Sx_V;
        Sy_V_read_reg_972 <= Sy_V;
        Win_V_read_reg_997 <= Win_V;
        lhs_V_2_cast_reg_1018[15 : 0] <= lhs_V_2_cast_fu_520_p1[15 : 0];
        lhs_V_4_cast_reg_1033[15 : 0] <= lhs_V_4_cast_fu_570_p1[15 : 0];
        p_1_reg_1013 <= p_1_fu_500_p3;
        p_s_reg_1008 <= p_s_fu_492_p3;
        relu_en_V_read_reg_967 <= relu_en_V;
        tmp_21_reg_1048 <= tmp_21_fu_608_p1;
        tmp_23_reg_1053 <= tmp_23_fu_612_p1;
        tmp_25_reg_1058 <= tmp_25_fu_616_p1;
        tmp_30_reg_1064 <= tmp_30_fu_620_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        Wout_V_reg_1070 <= Wout_V_fu_632_p2;
        rhs_V_1_cast_reg_1090 <= rhs_V_1_cast_fu_654_p2;
        rhs_V_1_reg_1111[15 : 0] <= rhs_V_1_fu_669_p1[15 : 0];
        rhs_V_reg_1095[15 : 0] <= rhs_V_fu_660_p1[15 : 0];
        tmp_19_reg_1101[7 : 0] <= tmp_19_fu_663_p1[7 : 0];
        tmp_20_reg_1106[7 : 0] <= tmp_20_fu_666_p1[7 : 0];
        tmp_7_reg_1075 <= tmp_7_fu_642_p2;
        tmp_9_reg_1080[7 : 0] <= tmp_9_fu_648_p1[7 : 0];
        tmp_s_reg_1085[7 : 0] <= tmp_s_fu_651_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        bias_addr_reg_1134 <= tmp_10_fu_683_p1;
        tmp_31_reg_1124 <= tmp_31_fu_688_p1;
        tmp_32_reg_1129 <= tmp_32_fu_692_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        cin_reg_1240 <= cin_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        cout_reg_1119 <= cout_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        h_V_reg_1188 <= h_V_fu_771_p2;
        ret_V_13_reg_1193 <= ret_V_13_fu_787_p2;
        ret_V_5_reg_1198 <= ret_V_5_fu_792_p2;
        rev_reg_1203 <= rev_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_reg_1147 <= i_fu_710_p2;
        next_mul4_reg_1139 <= next_mul4_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ii_reg_1183 <= ii_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_reg_1170 <= j_fu_741_p2;
        next_mul_reg_1162 <= next_mul_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        jj_reg_1216 <= jj_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_28_fu_862_p2 == 1'd1) & (brmerge_fu_849_p2 == 1'd0) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        ret_V_11_reg_1227 <= grp_fu_954_p3;
        tmp1_reg_1232 <= tmp1_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        ret_V_1_reg_1157 <= ret_V_1_fu_726_p2;
        tmp_22_reg_1152 <= tmp_22_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        sum6_reg_1208 <= sum6_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        sum_3_reg_1280 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        tmp_24_reg_1175 <= tmp_24_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tp_reg_1265 <= grp_fu_364_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        W_ce0 = 1'b1;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        feature_in_ce0 = 1'b1;
    end else begin
        feature_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        feature_out_ce0 = 1'b1;
    end else begin
        feature_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        feature_out_we0 = 1'b1;
    end else begin
        feature_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_357_p0 = sum_reg_273;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_357_p0 = sum_2_reg_319;
    end else begin
        grp_fu_357_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_357_p1 = bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_357_p1 = tp_reg_1265;
    end else begin
        grp_fu_357_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_552_ap_start = 1'b1;
    end else begin
        grp_fu_552_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_602_ap_start = 1'b1;
    end else begin
        grp_fu_602_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond5_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((exitcond1_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond_fu_736_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((exitcond4_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((exitcond3_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else if (((tmp_28_fu_862_p2 == 1'd1) & (brmerge_fu_849_p2 == 1'd0) & (exitcond3_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((exitcond2_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_address0 = sum4_cast_fu_919_p1;

assign Wout_V_fu_632_p2 = (16'd1 + tmp_13_fu_624_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign brmerge_fu_849_p2 = (tmp_36_fu_841_p3 | rev_reg_1203);

assign cin_fu_891_p2 = (i_op_assign_reg_330 + 16'd1);

assign cout_fu_677_p2 = (i_op_assign_s_reg_217 + 16'd1);

assign exitcond1_fu_705_p2 = ((i_op_assign_1_reg_228 == tmp_7_reg_1075) ? 1'b1 : 1'b0);

assign exitcond2_fu_886_p2 = ((i_op_assign_reg_330 == CHin_V_read_reg_1002) ? 1'b1 : 1'b0);

assign exitcond3_fu_816_p2 = ((i_op_assign_4_reg_308 == Kx_V_read_reg_987) ? 1'b1 : 1'b0);

assign exitcond4_fu_752_p2 = ((i_op_assign_3_reg_285 == Ky_V_read_reg_982) ? 1'b1 : 1'b0);

assign exitcond5_fu_672_p2 = ((i_op_assign_s_reg_217 == CHout_V_read_reg_992) ? 1'b1 : 1'b0);

assign exitcond_fu_736_p2 = ((i_op_assign_2_reg_250 == Wout_V_reg_1070) ? 1'b1 : 1'b0);

assign feature_in_address0 = tmp_29_fu_906_p1;

assign feature_out_address0 = sum6_cast_fu_937_p1;

assign feature_out_d0 = ((or_cond_fu_924_p2[0:0] === 1'b1) ? 16'd0 : sum_3_reg_1280);

assign grp_fu_552_p0 = $signed(ret_V_4_fu_538_p2);

assign grp_fu_552_p1 = grp_fu_552_p10;

assign grp_fu_552_p10 = Sx_V;

assign grp_fu_602_p0 = $signed(ret_V_8_fu_588_p2);

assign grp_fu_602_p1 = grp_fu_602_p10;

assign grp_fu_602_p10 = Sy_V;

assign grp_fu_947_p0 = i_op_assign_2_reg_250[7:0];

assign grp_fu_954_p1 = rhs_V_reg_1095;

assign grp_fu_960_p0 = i_op_assign_reg_330[4:0];

assign h_V_fu_771_p2 = (tmp_22_reg_1152 + tmp_18_fu_763_p1);

assign i_fu_710_p2 = (16'd1 + i_op_assign_1_reg_228);

assign ii_fu_757_p2 = (i_op_assign_3_reg_285 + 8'd1);

assign j_fu_741_p2 = (i_op_assign_2_reg_250 + 16'd1);

assign jj_fu_821_p2 = (i_op_assign_4_reg_308 + 8'd1);

assign lhs_V_2_cast_fu_520_p1 = Win_V;

assign lhs_V_4_cast_fu_570_p1 = Hin_V;

assign lhs_V_5_cast_fu_858_p1 = w_V_fu_831_p2;

assign lhs_V_7_cast_fu_780_p1 = h_V_fu_771_p2;

assign next_mul4_fu_696_p2 = (tmp_19_reg_1101 + phi_mul3_reg_239);

assign next_mul_fu_731_p2 = (phi_mul_reg_262 + tmp_20_reg_1106);

assign or_cond_fu_924_p2 = (relu_en_V_read_reg_967 & grp_fu_370_p2);

assign p_1_fu_500_p3 = ((mode_V[0:0] === 1'b1) ? pad_y_V_fu_484_p3 : 8'd0);

assign p_neg9_fu_394_p2 = (9'd1 - tmp_2_cast_fu_376_p1);

assign p_neg_fu_452_p2 = (9'd1 - tmp_16_cast_fu_434_p1);

assign p_s_fu_492_p3 = ((mode_V[0:0] === 1'b1) ? pad_x_V_fu_426_p3 : 8'd0);

assign pad_x_V_fu_426_p3 = ((tmp_1_fu_386_p3[0:0] === 1'b1) ? tmp_6_fu_420_p2 : tmp_2_fu_410_p4);

assign pad_y_V_fu_484_p3 = ((tmp_4_fu_444_p3[0:0] === 1'b1) ? tmp_11_fu_478_p2 : tmp_8_fu_468_p4);

assign ret_V_12_fu_871_p2 = (ret_V_5_reg_1198 + tmp_37_fu_867_p1);

assign ret_V_13_fu_787_p0 = ret_V_9_fu_941_p2;

assign ret_V_13_fu_787_p1 = rhs_V_1_reg_1111;

assign ret_V_13_fu_787_p2 = ($signed(ret_V_13_fu_787_p0) * $signed({{1'b0}, {ret_V_13_fu_787_p1}}));

assign ret_V_14_fu_901_p2 = ($signed(ret_V_11_reg_1227) + $signed(rhs_V_10_cast_fu_897_p1));

assign ret_V_1_fu_726_p2 = ($signed(ret_V_fu_716_p2) * $signed(tmp_30_reg_1064));

assign ret_V_1_tr_fu_438_p2 = ($signed(9'd511) + $signed(tmp_16_cast_fu_434_p1));

assign ret_V_2_cast_fu_516_p1 = ret_V_2_fu_508_p3;

assign ret_V_2_fu_508_p3 = {{p_s_fu_492_p3}, {1'd0}};

assign ret_V_3_cast_fu_530_p1 = ret_V_3_fu_524_p2;

assign ret_V_3_fu_524_p2 = (ret_V_2_cast_fu_516_p1 + lhs_V_2_cast_fu_520_p1);

assign ret_V_4_fu_538_p2 = (ret_V_3_cast_fu_530_p1 - rhs_V_2_cast_fu_534_p1);

assign ret_V_5_fu_792_p2 = ($signed(tmp_35_fu_767_p1) * $signed(tmp_21_reg_1048));

assign ret_V_6_cast_fu_566_p1 = ret_V_6_fu_558_p3;

assign ret_V_6_fu_558_p3 = {{p_1_fu_500_p3}, {1'd0}};

assign ret_V_7_cast_fu_580_p1 = ret_V_7_fu_574_p2;

assign ret_V_7_fu_574_p2 = (ret_V_6_cast_fu_566_p1 + lhs_V_4_cast_fu_570_p1);

assign ret_V_8_fu_588_p2 = (ret_V_7_cast_fu_580_p1 - rhs_V_5_cast_fu_584_p1);

assign ret_V_9_fu_941_p1 = rhs_V_reg_1095;

assign ret_V_fu_716_p2 = ($signed(tmp_33_fu_701_p1) * $signed(rhs_V_1_cast_reg_1090));

assign ret_V_tr_fu_380_p2 = ($signed(9'd511) + $signed(tmp_2_cast_fu_376_p1));

assign rev_fu_802_p2 = (slt_fu_797_p2 ^ 1'd1);

assign rhs_V_10_cast_fu_897_p1 = i_op_assign_reg_330;

assign rhs_V_1_cast_fu_654_p2 = (8'd1 + tmp_15_fu_628_p1);

assign rhs_V_1_fu_669_p1 = Win_V_read_reg_997;

assign rhs_V_2_cast_fu_534_p1 = Kx_V;

assign rhs_V_5_cast_fu_584_p1 = Ky_V;

assign rhs_V_fu_660_p1 = CHin_V_read_reg_1002;

assign slt_fu_797_p2 = (($signed(lhs_V_7_cast_fu_780_p1) < $signed(lhs_V_4_cast_reg_1033)) ? 1'b1 : 1'b0);

assign sum4_cast_fu_919_p1 = sum4_fu_915_p2;

assign sum4_fu_915_p2 = ($signed(grp_fu_960_p3) + $signed(tmp1_reg_1232));

assign sum6_cast_fu_937_p1 = sum6_reg_1208;

assign sum6_fu_812_p2 = ($signed(grp_fu_947_p3) + $signed(ret_V_1_reg_1157));

assign tmp1_fu_881_p2 = ($signed(tmp_fu_876_p2) * $signed(tmp_25_reg_1058));

assign tmp_10_fu_683_p1 = i_op_assign_s_reg_217;

assign tmp_11_fu_478_p2 = (8'd0 - tmp_5_fu_458_p4);

assign tmp_13_fu_624_p1 = grp_fu_552_p2[15:0];

assign tmp_15_fu_628_p1 = grp_fu_552_p2[7:0];

assign tmp_16_cast_fu_434_p1 = Ky_V;

assign tmp_17_fu_638_p1 = grp_fu_602_p2[15:0];

assign tmp_18_fu_763_p1 = i_op_assign_3_reg_285;

assign tmp_19_fu_663_p1 = Sy_V_read_reg_972;

assign tmp_1_fu_386_p3 = ret_V_tr_fu_380_p2[32'd8];

assign tmp_20_fu_666_p1 = Sx_V_read_reg_977;

assign tmp_21_fu_608_p1 = Kx_V[4:0];

assign tmp_22_fu_721_p2 = (phi_mul3_reg_239 - tmp_9_reg_1080);

assign tmp_23_fu_612_p1 = CHin_V[4:0];

assign tmp_24_fu_747_p2 = (phi_mul_reg_262 - tmp_s_reg_1085);

assign tmp_25_fu_616_p1 = CHout_V[4:0];

assign tmp_26_fu_827_p1 = i_op_assign_4_reg_308;

assign tmp_27_fu_836_p2 = (w_V_fu_831_p2 | h_V_reg_1188);

assign tmp_28_fu_862_p2 = (($signed(lhs_V_5_cast_fu_858_p1) < $signed(lhs_V_2_cast_reg_1018)) ? 1'b1 : 1'b0);

assign tmp_29_fu_906_p1 = $signed(ret_V_14_fu_901_p2);

assign tmp_2_cast_fu_376_p1 = Kx_V;

assign tmp_2_fu_410_p4 = {{ret_V_tr_fu_380_p2[8:1]}};

assign tmp_30_fu_620_p1 = CHout_V[7:0];

assign tmp_31_fu_688_p1 = i_op_assign_s_reg_217[7:0];

assign tmp_32_fu_692_p1 = i_op_assign_s_reg_217[4:0];

assign tmp_33_fu_701_p1 = i_op_assign_1_reg_228[7:0];

assign tmp_35_fu_767_p1 = i_op_assign_3_reg_285[4:0];

assign tmp_36_fu_841_p3 = tmp_27_fu_836_p2[32'd15];

assign tmp_37_fu_867_p1 = i_op_assign_4_reg_308[4:0];

assign tmp_3_fu_400_p4 = {{p_neg9_fu_394_p2[8:1]}};

assign tmp_4_fu_444_p3 = ret_V_1_tr_fu_438_p2[32'd8];

assign tmp_5_fu_458_p4 = {{p_neg_fu_452_p2[8:1]}};

assign tmp_6_fu_420_p2 = (8'd0 - tmp_3_fu_400_p4);

assign tmp_7_fu_642_p2 = (16'd1 + tmp_17_fu_638_p1);

assign tmp_8_fu_468_p4 = {{ret_V_1_tr_fu_438_p2[8:1]}};

assign tmp_9_fu_648_p1 = p_1_reg_1013;

assign tmp_fu_876_p2 = ($signed(ret_V_12_fu_871_p2) * $signed(tmp_23_reg_1053));

assign tmp_s_fu_651_p1 = p_s_reg_1008;

assign w_V_fu_831_p2 = (tmp_24_reg_1175 + tmp_26_fu_827_p1);

always @ (posedge ap_clk) begin
    lhs_V_2_cast_reg_1018[16] <= 1'b0;
    lhs_V_4_cast_reg_1033[16] <= 1'b0;
    tmp_9_reg_1080[15:8] <= 8'b00000000;
    tmp_s_reg_1085[15:8] <= 8'b00000000;
    rhs_V_reg_1095[31:16] <= 16'b0000000000000000;
    tmp_19_reg_1101[15:8] <= 8'b00000000;
    tmp_20_reg_1106[15:8] <= 8'b00000000;
    rhs_V_1_reg_1111[47:16] <= 32'b00000000000000000000000000000000;
end

endmodule //Conv
